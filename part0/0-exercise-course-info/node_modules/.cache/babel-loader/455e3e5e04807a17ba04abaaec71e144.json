{"ast":null,"code":"var _jsxFileName = \"/Users/sidneybuckner/Code/full-stack-open-sandbox/exercise-course-info/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = props => {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}; //The Part component takes in the parameter props as an object\n// and tells us how the props will be displayed\n// placeholders here!!!!!\n\n\n_c = Header;\n\nconst Part = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [props.part, \" \", props.exercise]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 11\n  }, this);\n}; //The Content component gives us corresponding fields\n// of the Props in Part component and defines what data will explicitly be displayed\n\n\n_c2 = Part;\n\nconst Content = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Part, {\n      part: props.part1,\n      exercise: props.exercises1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Part, {\n      part: props.part2,\n      exercise: props.exercises2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Part, {\n      part: props.part3,\n      exercise: props.exercises3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = Content;\n\nconst Total = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Number of exercises \", props.part1.exercises + props.part2.exercises + props.part3.exercises]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Total;\n\nconst App = () => {\n  const course = 'Half Stack application development';\n  const part1 = {\n    name: 'Fundamentals of React',\n    exercises: 10\n  };\n  const part2 = {\n    name: 'Using props to pass data',\n    exercises: 7\n  };\n  const part3 = {\n    name: 'State of a component',\n    exercises: 14\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      part1: part1.name,\n      exercises1: part1.exercises,\n      ppart2: part2.name,\n      exercises2: part2.exercises,\n      part3: part3.name,\n      exercises3: part3.exercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Part\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Total\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/Users/sidneybuckner/Code/full-stack-open-sandbox/exercise-course-info/src/App.js"],"names":["Header","props","console","log","course","Part","part","exercise","Content","part1","exercises1","part2","exercises2","part3","exercises3","Total","exercises","App","name"],"mappings":";;;AAAA,MAAMA,MAAM,GAAIC,KAAD,IACf;AACEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACE;AAAA,2BACE;AAAA,gBAAKA,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKC,CARH,C,CAUE;AACA;AACA;;;KAZIJ,M;;AAaN,MAAMK,IAAI,GAAIJ,KAAD,IAAS;AACpB,sBAAQ;AAAA,eACLA,KAAK,CAACK,IADD,OACQL,KAAK,CAACM,QADd;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAGD,CAJD,C,CAMA;AACA;;;MAPMF,I;;AAQN,MAAMG,OAAO,GAAIP,KAAD,IAAS;AACvB,sBACA;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,KAAK,CAACQ,KAAlB;AAAyB,MAAA,QAAQ,EAAER,KAAK,CAACS;AAAzC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAET,KAAK,CAACU,KAAlB;AAAyB,MAAA,QAAQ,EAAEV,KAAK,CAACW;AAAzC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEX,KAAK,CAACY,KAAlB;AAAyB,MAAA,QAAQ,EAAEZ,KAAK,CAACa;AAAzC;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAOC,CARH;;MAAMN,O;;AAUJ,MAAMO,KAAK,GAAId,KAAD,IAAS;AACrB,sBACA;AAAA,2BACE;AAAA,yCAAwBA,KAAK,CAACQ,KAAN,CAAYO,SAAZ,GAAwBf,KAAK,CAACU,KAAN,CAAYK,SAApC,GAAgDf,KAAK,CAACY,KAAN,CAAYG,SAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADA;AAGQ,CAJV;;MAAMD,K;;AAMR,MAAME,GAAG,GAAG,MAAM;AAClB,QAAMb,MAAM,GAAG,oCAAf;AACE,QAAMK,KAAK,GAAG;AACZS,IAAAA,IAAI,EAAE,uBADM;AAEZF,IAAAA,SAAS,EAAE;AAFC,GAAd;AAIA,QAAML,KAAK,GAAG;AACZO,IAAAA,IAAI,EAAE,0BADM;AAEZF,IAAAA,SAAS,EAAE;AAFC,GAAd;AAIA,QAAMH,KAAK,GAAG;AACZK,IAAAA,IAAI,EAAE,sBADM;AAEZF,IAAAA,SAAS,EAAE;AAFC,GAAd;AAMA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEZ;AAAhB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AACE,MAAA,KAAK,EAAEK,KAAK,CAACS,IADf;AAEE,MAAA,UAAU,EAAET,KAAK,CAACO,SAFpB;AAGE,MAAA,MAAM,EAAEL,KAAK,CAACO,IAHhB;AAIE,MAAA,UAAU,EAAEP,KAAK,CAACK,SAJpB;AAKE,MAAA,KAAK,EAAEH,KAAK,CAACK,IALf;AAME,MAAA,UAAU,EAAEL,KAAK,CAACG;AANpB;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA9BD;;MAAMC,G;AAgCN,eAAeA,GAAf","sourcesContent":["const Header = (props) =>\n{\n  console.log(props);\n  return(\n    <div>\n      <h1>{props.course}</h1>\n    </div>\n  )\n  }\n\n  //The Part component takes in the parameter props as an object\n  // and tells us how the props will be displayed\n  // placeholders here!!!!!\nconst Part = (props)=>{\n  return (<p>\n    {props.part} {props.exercise}\n  </p>);\n}\n\n//The Content component gives us corresponding fields\n// of the Props in Part component and defines what data will explicitly be displayed\nconst Content = (props)=>{\n  return(\n  <div>\n    <Part part={props.part1} exercise={props.exercises1}/>\n    <Part part={props.part2} exercise={props.exercises2}/>\n    <Part part={props.part3} exercise={props.exercises3}/>\n  </div>\n  )\n  }\n\n  const Total = (props)=>{ \n    return(\n    <div>\n      <p>Number of exercises {props.part1.exercises + props.part2.exercises + props.part3.exercises}</p> \n    </div>)}\n\nconst App = () => {\nconst course = 'Half Stack application development'\n  const part1 = {\n    name: 'Fundamentals of React',\n    exercises: 10\n  }\n  const part2 = {\n    name: 'Using props to pass data',\n    exercises: 7\n  }\n  const part3 = {\n    name: 'State of a component',\n    exercises: 14\n  }\n\n\n  return (\n    <div>\n      <Header course={course} />\n      <Content        \n        part1={part1.name}\n        exercises1={part1.exercises}\n        ppart2={part2.name}\n        exercises2={part2.exercises}\n        part3={part3.name}\n        exercises3={part3.exercises}\n        />\n      <Total />\n    </div>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}